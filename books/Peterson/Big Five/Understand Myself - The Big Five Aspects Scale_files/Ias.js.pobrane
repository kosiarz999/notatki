/*
** NOTE: This file is generated by Gulp and should not be edited directly!
** Any changes made directly to this file will be overwritten next time its asset group is processed by Gulp.
*/


Ias = {};

// note onSuccess takes a data argument assumed to be a response object (from json)
Ias.createDialogOnLink = function (theLink, theDialog, onSuccess) {
    theLink.on("click", function (event) {
        event.preventDefault();
        theDialog.dialog("open");
    });
    return Ias.createDialog(theDialog, onSuccess);
};


// note onSuccess takes a data argument assumed to be a response object (from json)
Ias.createDialog = function(theDialog, onSuccess) {
    return Ias.createDialogWidget(theDialog, Ias.createDialogAction(theDialog, onSuccess));
};


// note onSuccess takes a data argument assumed to be a response object (from json)
//  and the dialog object
Ias.createDialogAction = function(theDialog, onSuccess) {
    return function() {
        var theForm = theDialog.find('form');
        var params = Ias.prepareAjaxParameters(theForm);
        Ias.disableDialogButtons(theDialog);
        $.ajax(params)
            .done(function(data) {
                if (data.error) {
                    Ias.showDialogError(theDialog, data.error);
                    Ias.enableDialogButtons(theDialog);
                } else {
                    onSuccess(data, theDialog);
                }
            })
            .fail(function(jqxhr, textStatus, error) {
                Ias.showDialogError(theDialog, error);
                Ias.enableDialogButtons(theDialog);
            });
    };
}


Ias.createDialogWidget = function (theDialog, theAction) {
    theDialog.find('form').submit(function (event) {
        theAction();
        event.preventDefault();
    });

    return theDialog.dialog({
        autoOpen: false
        , modal: true
        , buttons: [
            {
                text: theDialog.data("button-ok-text"),
                click: theAction
            }
            , {
                text: theDialog.data("button-cancel-text"),
                click: function () {
                    $(this).dialog("close");
                }
            }
        ]
        , open: function () {
            Ias.hideDialogError(theDialog);
            Ias.enableDialogButtons(theDialog);
        }
    });

}





Ias.prepareAjaxParameters = function (form) {
    var formData = form.serializeArray();
    var paramters = {
        type: form.attr("method"),
        url: form.attr("action"),
        data: formData,
        dataType: 'json',
        encode: true
    };
    return paramters;
}


Ias.showDialogError = function (theDialog, msg) {
    theDialog.find('.dialog-error-message p').html(msg);
    theDialog.find('.dialog-error-message').show();
};

Ias.hideDialogError = function (theDialog) {
    theDialog.find('.dialog-error-message p').text('');
    theDialog.find('.dialog-error-message').hide();
};

Ias.disableDialogButtons = function (theDialog) {
    theDialog.dialog('widget').find('.ui-dialog-buttonpane').find('button').button('disable');
}

Ias.enableDialogButtons = function (theDialog) {
    theDialog.dialog('widget').find('.ui-dialog-buttonpane').find('button').button('enable');
}

Ias.dialogError = function (theDialog, errorMessage) {
    Ias.showDialogError(theDialog, errorMessage);
    Ias.enableDialogButtons(theDialog);
}

Ias.resetDialog = function(theDialog) {
    Ias.hideDialogError(theDialog);
    Ias.enableDialogButtons(theDialog);
}


//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIklhcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQUFMQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJJYXMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuSWFzID0ge307XHJcblxyXG4vLyBub3RlIG9uU3VjY2VzcyB0YWtlcyBhIGRhdGEgYXJndW1lbnQgYXNzdW1lZCB0byBiZSBhIHJlc3BvbnNlIG9iamVjdCAoZnJvbSBqc29uKVxyXG5JYXMuY3JlYXRlRGlhbG9nT25MaW5rID0gZnVuY3Rpb24gKHRoZUxpbmssIHRoZURpYWxvZywgb25TdWNjZXNzKSB7XHJcbiAgICB0aGVMaW5rLm9uKFwiY2xpY2tcIiwgZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICB0aGVEaWFsb2cuZGlhbG9nKFwib3BlblwiKTtcclxuICAgIH0pO1xyXG4gICAgcmV0dXJuIElhcy5jcmVhdGVEaWFsb2codGhlRGlhbG9nLCBvblN1Y2Nlc3MpO1xyXG59O1xyXG5cclxuXHJcbi8vIG5vdGUgb25TdWNjZXNzIHRha2VzIGEgZGF0YSBhcmd1bWVudCBhc3N1bWVkIHRvIGJlIGEgcmVzcG9uc2Ugb2JqZWN0IChmcm9tIGpzb24pXHJcbklhcy5jcmVhdGVEaWFsb2cgPSBmdW5jdGlvbih0aGVEaWFsb2csIG9uU3VjY2Vzcykge1xyXG4gICAgcmV0dXJuIElhcy5jcmVhdGVEaWFsb2dXaWRnZXQodGhlRGlhbG9nLCBJYXMuY3JlYXRlRGlhbG9nQWN0aW9uKHRoZURpYWxvZywgb25TdWNjZXNzKSk7XHJcbn07XHJcblxyXG5cclxuLy8gbm90ZSBvblN1Y2Nlc3MgdGFrZXMgYSBkYXRhIGFyZ3VtZW50IGFzc3VtZWQgdG8gYmUgYSByZXNwb25zZSBvYmplY3QgKGZyb20ganNvbilcclxuLy8gIGFuZCB0aGUgZGlhbG9nIG9iamVjdFxyXG5JYXMuY3JlYXRlRGlhbG9nQWN0aW9uID0gZnVuY3Rpb24odGhlRGlhbG9nLCBvblN1Y2Nlc3MpIHtcclxuICAgIHJldHVybiBmdW5jdGlvbigpIHtcclxuICAgICAgICB2YXIgdGhlRm9ybSA9IHRoZURpYWxvZy5maW5kKCdmb3JtJyk7XHJcbiAgICAgICAgdmFyIHBhcmFtcyA9IElhcy5wcmVwYXJlQWpheFBhcmFtZXRlcnModGhlRm9ybSk7XHJcbiAgICAgICAgSWFzLmRpc2FibGVEaWFsb2dCdXR0b25zKHRoZURpYWxvZyk7XHJcbiAgICAgICAgJC5hamF4KHBhcmFtcylcclxuICAgICAgICAgICAgLmRvbmUoZnVuY3Rpb24oZGF0YSkge1xyXG4gICAgICAgICAgICAgICAgaWYgKGRhdGEuZXJyb3IpIHtcclxuICAgICAgICAgICAgICAgICAgICBJYXMuc2hvd0RpYWxvZ0Vycm9yKHRoZURpYWxvZywgZGF0YS5lcnJvcik7XHJcbiAgICAgICAgICAgICAgICAgICAgSWFzLmVuYWJsZURpYWxvZ0J1dHRvbnModGhlRGlhbG9nKTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgb25TdWNjZXNzKGRhdGEsIHRoZURpYWxvZyk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIC5mYWlsKGZ1bmN0aW9uKGpxeGhyLCB0ZXh0U3RhdHVzLCBlcnJvcikge1xyXG4gICAgICAgICAgICAgICAgSWFzLnNob3dEaWFsb2dFcnJvcih0aGVEaWFsb2csIGVycm9yKTtcclxuICAgICAgICAgICAgICAgIElhcy5lbmFibGVEaWFsb2dCdXR0b25zKHRoZURpYWxvZyk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgfTtcclxufVxyXG5cclxuXHJcbklhcy5jcmVhdGVEaWFsb2dXaWRnZXQgPSBmdW5jdGlvbiAodGhlRGlhbG9nLCB0aGVBY3Rpb24pIHtcclxuICAgIHRoZURpYWxvZy5maW5kKCdmb3JtJykuc3VibWl0KGZ1bmN0aW9uIChldmVudCkge1xyXG4gICAgICAgIHRoZUFjdGlvbigpO1xyXG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICB9KTtcclxuXHJcbiAgICByZXR1cm4gdGhlRGlhbG9nLmRpYWxvZyh7XHJcbiAgICAgICAgYXV0b09wZW46IGZhbHNlXHJcbiAgICAgICAgLCBtb2RhbDogdHJ1ZVxyXG4gICAgICAgICwgYnV0dG9uczogW1xyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICB0ZXh0OiB0aGVEaWFsb2cuZGF0YShcImJ1dHRvbi1vay10ZXh0XCIpLFxyXG4gICAgICAgICAgICAgICAgY2xpY2s6IHRoZUFjdGlvblxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICwge1xyXG4gICAgICAgICAgICAgICAgdGV4dDogdGhlRGlhbG9nLmRhdGEoXCJidXR0b24tY2FuY2VsLXRleHRcIiksXHJcbiAgICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgICQodGhpcykuZGlhbG9nKFwiY2xvc2VcIik7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICBdXHJcbiAgICAgICAgLCBvcGVuOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIElhcy5oaWRlRGlhbG9nRXJyb3IodGhlRGlhbG9nKTtcclxuICAgICAgICAgICAgSWFzLmVuYWJsZURpYWxvZ0J1dHRvbnModGhlRGlhbG9nKTtcclxuICAgICAgICB9XHJcbiAgICB9KTtcclxuXHJcbn1cclxuXHJcblxyXG5cclxuXHJcblxyXG5JYXMucHJlcGFyZUFqYXhQYXJhbWV0ZXJzID0gZnVuY3Rpb24gKGZvcm0pIHtcclxuICAgIHZhciBmb3JtRGF0YSA9IGZvcm0uc2VyaWFsaXplQXJyYXkoKTtcclxuICAgIHZhciBwYXJhbXRlcnMgPSB7XHJcbiAgICAgICAgdHlwZTogZm9ybS5hdHRyKFwibWV0aG9kXCIpLFxyXG4gICAgICAgIHVybDogZm9ybS5hdHRyKFwiYWN0aW9uXCIpLFxyXG4gICAgICAgIGRhdGE6IGZvcm1EYXRhLFxyXG4gICAgICAgIGRhdGFUeXBlOiAnanNvbicsXHJcbiAgICAgICAgZW5jb2RlOiB0cnVlXHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIHBhcmFtdGVycztcclxufVxyXG5cclxuXHJcbklhcy5zaG93RGlhbG9nRXJyb3IgPSBmdW5jdGlvbiAodGhlRGlhbG9nLCBtc2cpIHtcclxuICAgIHRoZURpYWxvZy5maW5kKCcuZGlhbG9nLWVycm9yLW1lc3NhZ2UgcCcpLmh0bWwobXNnKTtcclxuICAgIHRoZURpYWxvZy5maW5kKCcuZGlhbG9nLWVycm9yLW1lc3NhZ2UnKS5zaG93KCk7XHJcbn07XHJcblxyXG5JYXMuaGlkZURpYWxvZ0Vycm9yID0gZnVuY3Rpb24gKHRoZURpYWxvZykge1xyXG4gICAgdGhlRGlhbG9nLmZpbmQoJy5kaWFsb2ctZXJyb3ItbWVzc2FnZSBwJykudGV4dCgnJyk7XHJcbiAgICB0aGVEaWFsb2cuZmluZCgnLmRpYWxvZy1lcnJvci1tZXNzYWdlJykuaGlkZSgpO1xyXG59O1xyXG5cclxuSWFzLmRpc2FibGVEaWFsb2dCdXR0b25zID0gZnVuY3Rpb24gKHRoZURpYWxvZykge1xyXG4gICAgdGhlRGlhbG9nLmRpYWxvZygnd2lkZ2V0JykuZmluZCgnLnVpLWRpYWxvZy1idXR0b25wYW5lJykuZmluZCgnYnV0dG9uJykuYnV0dG9uKCdkaXNhYmxlJyk7XHJcbn1cclxuXHJcbklhcy5lbmFibGVEaWFsb2dCdXR0b25zID0gZnVuY3Rpb24gKHRoZURpYWxvZykge1xyXG4gICAgdGhlRGlhbG9nLmRpYWxvZygnd2lkZ2V0JykuZmluZCgnLnVpLWRpYWxvZy1idXR0b25wYW5lJykuZmluZCgnYnV0dG9uJykuYnV0dG9uKCdlbmFibGUnKTtcclxufVxyXG5cclxuSWFzLmRpYWxvZ0Vycm9yID0gZnVuY3Rpb24gKHRoZURpYWxvZywgZXJyb3JNZXNzYWdlKSB7XHJcbiAgICBJYXMuc2hvd0RpYWxvZ0Vycm9yKHRoZURpYWxvZywgZXJyb3JNZXNzYWdlKTtcclxuICAgIElhcy5lbmFibGVEaWFsb2dCdXR0b25zKHRoZURpYWxvZyk7XHJcbn1cclxuXHJcbklhcy5yZXNldERpYWxvZyA9IGZ1bmN0aW9uKHRoZURpYWxvZykge1xyXG4gICAgSWFzLmhpZGVEaWFsb2dFcnJvcih0aGVEaWFsb2cpO1xyXG4gICAgSWFzLmVuYWJsZURpYWxvZ0J1dHRvbnModGhlRGlhbG9nKTtcclxufVxyXG5cclxuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
